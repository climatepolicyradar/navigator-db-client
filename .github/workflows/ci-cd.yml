name: CI/CD

on:
  push:
    tags: [v*]
    branches:
      - main
  pull_request:
    # By default, a workflow only runs when a pull_request event's activity type is opened,
    # synchronize, or reopened.
    types: [opened, synchronize, reopened, edited]
    branches:
      - main

permissions: read-all

jobs:
  check-auto-tagging-will-work:
    if: |
      github.event_name == 'pull_request' &&
      (! startsWith(github.ref, 'refs/tags') && ! startsWith(github.ref, 'refs/heads/main'))

    runs-on: ubuntu-latest
    # User controlled input needs to be santitised beforehand e.g., by adding an
    # intermediate env var to prevent the workflow being exposed to a critical
    # command injection attack
    env:
      PR_BODY: "${{ github.event.pull_request.body }}"
    steps:
      - name: Determine new tag version from PR body
        id: determine_next_tag_from_pr
        uses: climatepolicyradar/get-next-tag-from-pr-body@v2
        with:
          pr_body: "${{ env.PR_BODY }}"
          pr_number: "${{ github.event.pull_request.number }}"

      - name: Next tag found?
        run: |
          if [[ -z "${{ steps.determine_next_tag_from_pr.outputs.new_tag }}" ]]; then
            exit 1;
          fi

  code-quality:
    needs:
      - check-auto-tagging-will-work
    permissions:
      # For trunk to post annotations
      checks: write
      # For repo checkout
      contents: read
    uses: climatepolicyradar/reusable-workflows/.github/workflows/python-precommit-validator.yml@v3

  test:
    needs:
      - code-quality
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.9"

      - name: Set PYTHONPATH
        run: echo "PYTHONPATH=$GITHUB_WORKSPACE" >> $GITHUB_ENV

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -

      - name: Configure Poetry
        run: |
          echo "$HOME/.local/bin" >> $GITHUB_PATH
          poetry config virtualenvs.create false

      - name: Install dependencies
        run: poetry install --no-root

      - name: Test
        run: |
          make test

  tag:
    runs-on: ubuntu-latest
    if: ${{ github.ref == 'refs/heads/main' }}
    permissions:
      contents: write

    needs:
      - code-quality
      - test

    outputs:
      new_tag: ${{ steps.determine_next_tag.outputs.new_tag }}

    steps:
      - uses: actions/checkout@v4
      - uses: fregante/setup-git-user@v2

      - name: Determine new tag version
        id: determine_next_tag
        uses: climatepolicyradar/get-next-tag-from-pr-body@v2

      - name: Create Git tag and push
        run: |
          new_tag=${{ steps.determine_next_tag.outputs.new_tag }}
          new_version_num=${new_tag#v}
          git tag -a "${new_tag}" -m "Version ${new_version_num}"
          git push --tags origin "${new_tag}"

  release:
    needs: tag
    permissions:
      contents: write
    uses: climatepolicyradar/reusable-workflows/.github/workflows/release.yml@v3
    with:
      new_tag: ${{ needs.tag.outputs.new_tag }}
